---
author: ðŸ”€ingestron.io
script: api/futurama@v1
description: |
  If you are a Futurama fan, then this api is for you. Here you can find everything from Episodes 
  to Characters to Trivia Questions, and even some of the Products featured on the show.
  -- @dataset {string} dataset name to fetch.
  returns {json} metadata object in JSON format.
relativePath: meta/api
fileName: futurama.yaml
fileType: yaml
tags: [metadata, api]
output: |
  {
    "baseUrl": baseUrl,
    "dataset": datasets[name = '${dataset}'],
    "primaryKeys": $append(datasets[name = '${dataset}'].schema.columns[unique].name, [])
  }
---
baseUrl: https://api.sampleapis.com/futurama/
datasets:
  - name: characters
    relativeUrl: characters
    mapping:
      parentNode: $.*
      columns:
        - { path: id, name: id }
        - { path: name.first, name: firstName }
        - { path: name.last, name: lastName }
        - { path: age, name: age }
        - { path: images.main, name: imageUrl }
        - { path: gender, name: gender }
        - { path: homePlanet, name: homePlanet }
        - { path: occupation, name: occupation }
    schema:
      columns:
        - { name: id, type: int, unique: true }
        - { name: firstName, type: varchar }
        - { name: lastName, type: varchar }
        - { name: age, type: varchar }
        - { name: imageUrl, type: varchar }
        - { name: gender, type: varchar }
        - { name: homePlanet, type: varchar }
        - { name: occupation, type: varchar }
  - name: sayings
    relativeUrl: sayings
    mapping:
      query: '**.sayings#$idx.{"id": ($idx + 1), "characterId": %.id, "value": $}'
    schema:
      columns:
        - { name: id, type: int, unique: true }
        - { name: characterId, type: int }
        - { name: value, type: varchar }
  - name: episodes
    relativeUrl: episodes
    mapping:
      parentNode: $.*
      columns:
        - { path: id, name: id }
        - { path: number, name: number }
        - { path: title, name: title }
        - { path: writers, name: writers }
        - { path: description, name: description }
    schema:
      columns:
        - { name: id, type: int, unique: true }
        - { name: number, type: varchar }
        - { name: title, type: varchar }
        - { name: writers, type: varchar }
        - { name: description, type: varchar }
